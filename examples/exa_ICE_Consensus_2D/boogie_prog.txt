// This function definition defines the invariant to be inferred
function {:existential true} my_inv (t : int, x : int, y : int) : bool;

procedure main()
{
    var t : int;
    var x : int;
    var y : int;
    t := 0;
    assume -10 <= x && x <= 10 && -10 <= y && y <= 10;

    while (*)
    invariant my_inv(t, x, y);
    {
        t := t + 1;
        if (x > y)
        {
            x := x - 1;
        }
        else if (y > x)
        {
            y := y - 1;
        }
    }

    assert (-10 <= x && x <= 10 && -10 <= y && y <= 10) && (t < 20 || x == y);
}

// Times out with bound put on 10